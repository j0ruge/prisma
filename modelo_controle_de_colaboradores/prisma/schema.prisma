// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Culto {
  id                  String                @id @unique @default(cuid())
  data_culto          DateTime
  periodo_culto       String
  dia_semana_culto    String
  CultoColaborador    CultoColaborador[]
  CultoBradosDeJubilo CultoBradosDeJubilo[]
  Formulario          Formulario? //One-to-One https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations

  @@map("cultos")
}

//Exemplo One to Many usando Prisma Schemes
//ref. https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-many-relations

model Colaborador {
  id               String             @id @unique @default(cuid())
  nome             String
  created_at       DateTime           @default(now())
  CultoColaborador CultoColaborador[]
  formulario       Formulario[] //One-to-One https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations

  @@map("colaboradores")
}

model Formulario {
  id             String      @id @unique @default(cuid())
  colaborador_id String
  colaborador    Colaborador @relation(fields: [colaborador_id], references: [id])
  culto_id       String      @unique
  culto          Culto       @relation(fields: [culto_id], references: [id])

  resposta_formulario   DateTime
  observacao_formulario String

  @@map("formulario")
}

//One to Many Exemplo FIM

model BradosDeJubilo {
  id                  String                @id @unique @default(cuid())
  numero_brado        Int
  versao_brado        String
  nome_musica         String
  CultoBradosDeJubilo CultoBradosDeJubilo[]

  @@map("brado_de_jubilo")
}

//Exemplo Many to Many usando Prisma Schemes

model CultoColaborador {
  id             String      @id @unique @default(cuid())
  id_culto       String
  culto          Culto       @relation(fields: [id_culto], references: [id])
  id_colaborador String
  colaborador    Colaborador @relation(fields: [id_colaborador], references: [id])
  funcao_culto   String

  @@map("culto_colaborador")
}

model CultoBradosDeJubilo {
  id                  String         @id @unique @default(cuid())
  id_culto            String
  culto               Culto          @relation(fields: [id_culto], references: [id])
  id_brados_de_jubilo String
  brado_de_jubilo     BradosDeJubilo @relation(fields: [id_brados_de_jubilo], references: [id])

  @@map("culto_brado_de_jubilo")
}


model VersaoBiblia {
  id          String      @id @unique @default(cuid())
  nome_versao      String  
  texto_biblico_versao_biblia TextoBiblicoVersaoBiblia[]

  @@map("versao_biblia")
} 

model TextoBiblicoVersaoBiblia{
  id          String      @id @unique @default(cuid())
  id_texto_biblico String
  texto_biblico TextoBiblico @relation(fields: [id_texto_biblico], references: [id])
  id_versao_biblia String
  versao_biblia VersaoBiblia @relation(fields: [id_versao_biblia], references: [id])

  @@map("texto_biblico_versao_biblia")  
  }

model TextoBiblico{
  id          String      @id @unique @default(cuid())
  livro String
  capitulo Int
  versiculo Int  
  texto_biblico_versao_biblia TextoBiblicoVersaoBiblia[]
  @@map("texto_biblico")
}